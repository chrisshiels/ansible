---

- name: Discover all repositories
  find:
    paths: /etc/yum.repos.d
    patterns: '*.repo'
  register: repositories


- name: Discover Ansible managed repositories
  find:
    paths: /etc/yum.repos.d
    patterns: '*.repo'
    contains: '.*# Ansible managed.'
  register: repositoriesansiblemanaged


- name: Filter paths
  set_fact:
    repositoriespaths: "{{ repositories.files
                           | map(attribute = 'path') | list }}"
    repositoriesansiblemanagedpaths: "{{ repositoriesansiblemanaged.files
                                         | map(attribute = 'path') | list }}"


- name: Disable non-Ansible managed repositories
  shell: "mv {{ item }} {{ item }}~"
  with_items:
    "{{ repositoriespaths | difference(repositoriesansiblemanagedpaths) }}"
  tags:
    - skip_ansible_lint


- name: Repositories
  template:
    src: yum.repo.j2
    dest: "/etc/yum.repos.d/{{ item.name }}.repo"
    owner: root
    group: root
    mode: 0644
  with_items:
    "{{ common_repos }}"


- name: Packages
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    "{{ common_packages }}"


- name: Prompt
  template:
    src: prompt.sh.j2
    dest: /etc/profile.d/prompt.sh
    owner: root
    group: root
    mode: 0644


- name: Secondary groups
  group:
    name: "{{ item }}"
    state: present
    system: 'yes'
  with_items:
    "{{ common_usersgroups |
          map(attribute = 'groups') | flatten | unique | sort }}"


- name: Remove absent users
  user:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
  with_items:
    "{{ common_usersgroups |
          selectattr('state', 'equalto', 'absent') | list }}"


- name: Primary groups
  group:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    system: 'no'
    gid: "{{ item.gid }}"
  with_items:
    "{{ common_usersgroups }}"


- name: Add present users
  user:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    uid: "{{ item.uid }}"
    group: "{{ item.name }}"
    groups: "{{ item.groups }}"
    comment: "{{ item.comment }}"
    home: "{{ item.home }}"
    shell: "{{ item.shell }}"
    password: "{{ item.password }}"
  with_items:
    "{{ common_usersgroups |
          selectattr('state', 'equalto', 'present') | list }}"
